// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Warehourse.ProductPlacement.Infrastructure.DbContexts;

#nullable disable

namespace Warehourse.ProductPlacement.Infrastructure.Migrations
{
    [DbContext(typeof(ProductWriteDbContext))]
    [Migration("20250504200224_ww")]
    partial class ww
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("WarehouseManagement")
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Warehourse.ProductPlacement.Domain.Aggregate.PendingProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.ComplexProperty<Dictionary<string, object>>("Category", "Warehourse.ProductPlacement.Domain.Aggregate.PendingProduct.Category#Category", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("character varying(40)")
                                .HasColumnName("category");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Description", "Warehourse.ProductPlacement.Domain.Aggregate.PendingProduct.Description#Description", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("character varying(40)")
                                .HasColumnName("description");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Name", "Warehourse.ProductPlacement.Domain.Aggregate.PendingProduct.Name#Name", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("character varying(40)")
                                .HasColumnName("name");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Size", "Warehourse.ProductPlacement.Domain.Aggregate.PendingProduct.Size#Size", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<double>("Height")
                                .HasMaxLength(40)
                                .HasColumnType("double precision")
                                .HasColumnName("height");

                            b1.Property<double>("Length")
                                .HasMaxLength(40)
                                .HasColumnType("double precision")
                                .HasColumnName("length");

                            b1.Property<double>("Width")
                                .HasMaxLength(40)
                                .HasColumnType("double precision")
                                .HasColumnName("width");
                        });

                    b.HasKey("Id")
                        .HasName("pk_pending_products");

                    b.ToTable("pending_products", "WarehouseManagement");
                });

            modelBuilder.Entity("Warehourse.ProductPlacement.Domain.Aggregate.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.ComplexProperty<Dictionary<string, object>>("Category", "Warehourse.ProductPlacement.Domain.Aggregate.Product.Category#Category", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("character varying(40)")
                                .HasColumnName("category");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Description", "Warehourse.ProductPlacement.Domain.Aggregate.Product.Description#Description", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("character varying(40)")
                                .HasColumnName("description");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Name", "Warehourse.ProductPlacement.Domain.Aggregate.Product.Name#Name", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("character varying(40)")
                                .HasColumnName("name");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Size", "Warehourse.ProductPlacement.Domain.Aggregate.Product.Size#Size", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<double>("Height")
                                .HasMaxLength(40)
                                .HasColumnType("double precision")
                                .HasColumnName("height");

                            b1.Property<double>("Length")
                                .HasMaxLength(40)
                                .HasColumnType("double precision")
                                .HasColumnName("length");

                            b1.Property<double>("Width")
                                .HasMaxLength(40)
                                .HasColumnType("double precision")
                                .HasColumnName("width");
                        });

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.ToTable("products", "WarehouseManagement");
                });

            modelBuilder.Entity("Warehourse.ProductPlacement.Domain.Aggregate.ProductStorage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uuid")
                        .HasColumnName("section_id");

                    b.Property<Guid>("WarehouseId")
                        .HasColumnType("uuid")
                        .HasColumnName("warehouse_id");

                    b.ComplexProperty<Dictionary<string, object>>("ShelfPosition", "Warehourse.ProductPlacement.Domain.Aggregate.ProductStorage.ShelfPosition#ShelfPosition", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("SectionRowNumber")
                                .HasColumnType("integer")
                                .HasColumnName("shelf_position_section_row_number");

                            b1.Property<int>("ShelfColumnNumber")
                                .HasColumnType("integer")
                                .HasColumnName("shelf_position_shelf_column_number");

                            b1.Property<int>("ShelfRowNumber")
                                .HasColumnType("integer")
                                .HasColumnName("shelf_position_shelf_row_number");
                        });

                    b.HasKey("Id")
                        .HasName("pk_product_storages");

                    b.ToTable("product_storages", "WarehouseManagement");
                });
#pragma warning restore 612, 618
        }
    }
}
