// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Warehouse.WarehouseManagement.Infrastructure.DbContexts;

#nullable disable

namespace Warehouse.WarehouseManagement.Infrastructure.Migrations
{
    [DbContext(typeof(WarehouseReadDbContext))]
    partial class WarehouseReadDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("WarehouseManagement")
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Warehouse.WarehouseManagement.Contracts.Dtos.FullSectionDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("SectionRows")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("section_rows");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<Guid>("WarehouseId")
                        .HasColumnType("uuid")
                        .HasColumnName("warehouse_id");

                    b.ComplexProperty<Dictionary<string, object>>("Size", "Warehouse.WarehouseManagement.Contracts.Dtos.FullSectionDto.Size#SizeDto", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<double>("Height")
                                .HasColumnType("double precision")
                                .HasColumnName("size_height");

                            b1.Property<double>("Length")
                                .HasColumnType("double precision")
                                .HasColumnName("size_length");

                            b1.Property<double>("Width")
                                .HasColumnType("double precision")
                                .HasColumnName("size_width");
                        });

                    b.HasKey("Id")
                        .HasName("pk_sections");

                    b.HasIndex("WarehouseId")
                        .HasDatabaseName("ix_sections_warehouse_id");

                    b.ToTable("sections", "WarehouseManagement");
                });

            modelBuilder.Entity("Warehouse.WarehouseManagement.Contracts.Dtos.WarehouseDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.ComplexProperty<Dictionary<string, object>>("Size", "Warehouse.WarehouseManagement.Contracts.Dtos.WarehouseDto.Size#SizeDto", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<double>("Height")
                                .HasColumnType("double precision")
                                .HasColumnName("size_height");

                            b1.Property<double>("Length")
                                .HasColumnType("double precision")
                                .HasColumnName("size_length");

                            b1.Property<double>("Width")
                                .HasColumnType("double precision")
                                .HasColumnName("size_width");
                        });

                    b.HasKey("Id")
                        .HasName("pk_warehouses");

                    b.ToTable("warehouses", "WarehouseManagement");
                });

            modelBuilder.Entity("Warehouse.WarehouseManagement.Contracts.Dtos.FullSectionDto", b =>
                {
                    b.HasOne("Warehouse.WarehouseManagement.Contracts.Dtos.WarehouseDto", null)
                        .WithMany("Sections")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sections_warehouses_warehouse_id");
                });

            modelBuilder.Entity("Warehouse.WarehouseManagement.Contracts.Dtos.WarehouseDto", b =>
                {
                    b.Navigation("Sections");
                });
#pragma warning restore 612, 618
        }
    }
}
